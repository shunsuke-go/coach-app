version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2 

jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        environment:
          - RAILS_ENV: 'test'
      - image: circleci/mysql:8.0
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_ROOT_HOST: '%'
        command: --default-authentication-plugin=mysql_native_password

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: "Node.js と npm の更新"
          command: |
            curl -sSL "https://nodejs.org/dist/v11.10.0/node-v11.10.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v11.10.0-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash
      - run:
          name: 現行バージョンのノードのチェック
          command: node -v
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run: mv config/database.yml.ci config/database.yml 
      # Database setup
      - run: bundle exec rails db:create
      - run: bundle exec rails db:schema:load
# rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop
      - run:
          name: run tests
          command: |
            rm -rf bin/webpack*
            gem install rails
            rails webpacker:install
            RAILS_ENV=test bundle exec rails webpacker:compile
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - 3f:77:0f:b3:07:a0:cd:c8:43:9b:6c:1c:88:1d:df:86
      - run: ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "home/ec2-user/coach-app/deploy-me.sh"
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - deploy:
          requires:   #buildジョブが完了されるまで処理が待機されるように設定
            - build
          filters:
            branches:
              only: main



